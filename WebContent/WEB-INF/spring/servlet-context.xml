<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven /><!--annotation-driven 어노테이션의 방식으로 주도적으로 사용하는 뜻으로 애가 들어가지 않으면 @이 의미 없다.  -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<!-- 이경로에 지정되어 있으면 컨트롤러를 실행하지 말고 바로 실행하라는 뜻이다  -->
	<!-- resources 밑에 있는건 정적파일이다 바뀌지 않는 것이다 컨트롤러로 가지 말고 맞바로 실행해라 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"><!--컨트롤러가 리턴하는 값에  -->
		<!--InternalResourceViewResolver는 내부파일에서 뷰파일(.jsp)해석하는 자  -->
		<property name="prefix" value="/WEB-INF/views/" /><!-- 앞에 벨류값을 붙이겠다  -->
		<property name="suffix" value=".jsp" /><!-- 뒤에 벨류 값을 붙이겠다  -->
	</bean>
	
	<context:component-scan base-package="com.mycompany.web" /><!--component는 자바 객체 scan은 위에서 아래로 찾아검색하는 것  -->
	<!-- base-package="com.mycompany.web" 이 패키지 밑에 있는 모든 패키지의 스프링을 관리하라 -->
	<!-- 즉 안에서 클래스 안에 @Controller가 붙여 있는것만 해당 된다. -->
	<!-- 모든 패키지를 감싸고 있는 패키지 루트 패키지라고 한다  -->
	<!-- 서버가 실행될때 @가 붙어 있는것들을 찾아서 객체로 만든다 -->

	
	<!--멀티 파트를 해석하는 멀티파트 구현체  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
</beans>
